name: Techmino CI

on:
  push:
    branches: [ main, ci, update-cc-ci, ssl-android-test ]
  pull_request:
    branches: [ main, ci, update-cc-ci, ssl-android-test ]

jobs:
  build-android:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    - name: Install lua
      run: |
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt-get install lua5.3 -y
    - name: Get CommitID
      run: |
        CommitID=$(git rev-parse --short "${{ GITHUB.SHA }}")
        echo "CommitID=${CommitID}" >> $GITHUB_ENV
    - name: Get Version
      run: |
        Version=$(lua ./.github/workflows/getVersion.lua -name)
        echo "Version=${Version}" >> $GITHUB_ENV
    - name: Update Conf
      run: |
        python3 ./.github/workflows/updateVersion.py -T Conf
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T Version -H ${{ env.CommitID }}
    - name: Clone love-android
      run: |
        git clone --recurse-submodules https://github.com/26F-Studio/love-android
        cd ./love-android
        git checkout --recurse-submodules CI
    - name: Download androidSDK
      run: |
        wget -O commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
    - name: Unpack androidSDK
      run: |
        unzip ./commandlinetools.zip
    - name: Install SDK NDK
      run: |
        yes | ./cmdline-tools/bin/sdkmanager --sdk_root=. --install "platforms;android-30"
        yes | ./cmdline-tools/bin/sdkmanager --sdk_root=. --install "ndk;21.3.6528147"
        export ANDROID_HOME=$(pwd)
    - name: Download ColdClear
      run: |
        CCVersion=$(python3 ./.github/workflows/getLatest.py -P)
        curl -OL https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$CCVersion/android_aarch64.zip
        curl -OL https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$CCVersion/android_armv7.zip
        $$TODO
    - name: Unpack ColdClear
      run: |
        7z x ./android_aarch64.zip -oColdClear/android_aarch64
        7z x ./android_armv7.zip -oColdClear/android_armv7
    - name: Pack Techmino
      run: |
        mkdir -p ./love-android/app/src/main/assets
        mkdir -p ./love-android/app/libs/arm64-v8a
        mkdir -p ./love-android/app/libs/armeabi-v7a
        mv ./ColdClear/android_aarch64/love-11.3-android/lib/arm64-v8a/libcold_clear.so ./love-android/app/libs/arm64-v8a
        mv ./ColdClear/android_armv7/love-11.3-android/lib/armeabi-v7a/libcold_clear.so ./love-android/app/libs/armeabi-v7a
        mkdir -p ./libAndroid/arm64-v8a
        mkdir -p ./libAndroid/armeabi-v7a
        mv ./ColdClear/android_aarch64/libs/arm64-v8a/libCCloader.so ./libAndroid/arm64-v8a
        mv ./ColdClear/android_armv7/libs/armeabi-v7a/libCCloader.so ./libAndroid/armeabi-v7a
        $$TODO
        7z a -tzip ./love-android/app/src/main/assets/game.love ./document ./media ./parts ./Zframework ./libAndroid ./conf.lua ./main.lua ./version.lua
        echo "${{ secrets.SIGNING_KEY }}" | base64 -d > ./love-android/app/android.keystore
        python3 ./.github/workflows/updateVersion.py -T AndroidSnapshot -C $(lua ./.github/workflows/getVersion.lua -code) -N ${{ env.Version }} -S ${{ secrets.KEY_STORE_PASSWORD }} -A ${{ secrets.ALIAS }} -K ${{ secrets.KEY_PASSWORD }}
        chmod 777 ./love-android/gradlew
        cd ./love-android/
        ./gradlew assembleRelease
        mv ./app/build/outputs/apk/release/app-release.apk ./app/build/outputs/apk/release/Techmino_Snapshot.apk
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ env.Version }}_${{ GITHUB.RUN_NUMBER }}_${{ env.CommitID }}_Android
        path: ./love-android/app/build/outputs/apk/release/Techmino_Snapshot.apk
