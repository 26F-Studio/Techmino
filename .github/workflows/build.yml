name: Techmino CI

on:
  push:
    branches: [ main, ci* ]
  pull_request:
    branches: [ main, ci* ]

jobs:
  get-version:
    runs-on: ubuntu-20.04
    outputs:
      name: ${{ steps.actual-get-version.outputs.name }}
      code: ${{ steps.actual-get-version.outputs.code }}
      commit: ${{ steps.actual-get-version.outputs.commit }}
    steps:
    - uses: actions/checkout@v2
    - name: Install lua
      run: |
        sudo apt-get update -y
        sudo apt-get install lua5.3 -y
    - name: Get Version
      id: actual-get-version
      run: |
        echo "::set-output name=name::$(lua ./.github/workflows/getVersion.lua -name)"
        echo "::set-output name=code::$(lua ./.github/workflows/getVersion.lua -code)"
        echo "::set-output name=commit::$(git rev-parse --short ${{ GITHUB.SHA }})"

  get-cc-url:
    runs-on: ubuntu-20.04
    outputs:
      url: ${{ steps.get-url.outputs.url }}
    steps:
    - uses: actions/checkout@v2
    - name: Get URL
      id: get-url
      run: |
        echo "::set-output name=url::https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$(python ./.github/workflows/getLatest.py -P)"

  build-windows:
    runs-on: windows-latest
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-version.outputs.commit }}
    - uses: ./.github/actions/build-windows
      with:
        love-url: https://github.com/love2d/love/releases/download/11.3/love-11.3-win64.zip
        love-dir: love-11.3-win64
        cc-url: ${{ needs.get-cc-url.outputs.url }}/win64.zip
        version: ${{ needs.get-version.outputs.name }}
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-version.outputs.commit }}_Windows
        path: love

  build-linux:
    runs-on: ubuntu-20.04
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-version.outputs.commit }}
    - uses: ./.github/actions/build-linux
      with:
        cc-url: ${{ needs.get-cc-url.outputs.url }}/linux.zip
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-version.outputs.commit }}_Linux
        path: Techmino.AppImage

  build-android:
    runs-on: ubuntu-20.04
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-version.outputs.commit }}
    - uses: ./.github/actions/build-android
      with:
        cc-url: ${{ needs.get-cc-url.outputs.url }}
    - name: pack Techmino
      run: |
        echo "${{ secrets.SIGNING_KEY }}" | base64 -d > ./love-android/app/android.keystore
        python3 ./.github/workflows/updateVersion.py -T AndroidSnapshot -C ${{ needs.get-version.outputs.code }} -N ${{ needs.get-version.outputs.name }} -S ${{ secrets.KEY_STORE_PASSWORD }} -A ${{ secrets.ALIAS }} -K ${{ secrets.KEY_PASSWORD }}
        chmod 777 ./love-android/gradlew
        cd ./love-android/
        ./gradlew assembleRelease
    - name: rename apk
      run: mv ./app/build/outputs/apk/release/app-release.apk ./app/build/outputs/apk/release/Techmino_Snapshot.apk
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-version.outputs.commit }}_Android
        path: ./love-android/app/build/outputs/apk/release/Techmino_Snapshot.apk

  build-macOS:
    runs-on: macos-10.15
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-version.outputs.commit }}
    - uses: ./.github/actions/build-macos
      with:
        cc-url: ${{ needs.get-cc-url.outputs.url }}/macOS.zip
        name: ${{ needs.get-version.outputs.name }}
        icon: ./.github/build/macOS/icon_snapshot.icns
    - name: Codesign executable
      # In secrets:
      #   - MACOS_CERTIFICATE: the *.p12 Developer ID Certificate, encoded in base64
      #   - MACOS_CERTIFICATE_PWD: The password
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        security create-keychain -p Techminohaowan build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p Techminohaowan build.keychain
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k Techminohaowan build.keychain
        /usr/bin/codesign --force --deep -s 79B81FC5EA155243C973B5417B0996501F00EF55 ./Techmino.app -v
    - name: Pack Techmino
      run: |
        zip -r -y Techmino.zip Techmino.app
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-version.outputs.commit }}_macOS
        path: Techmino.zip
