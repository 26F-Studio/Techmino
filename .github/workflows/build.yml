name: Techmino CI

on:
  push:
    branches: [ main, ci* ]
  pull_request:
    branches: [ main, ci* ]

jobs:
  get-info:
    runs-on: ubuntu-20.04
    outputs:
      name: ${{ steps.actual-get-info.outputs.name }}
      code: ${{ steps.actual-get-info.outputs.code }}
      commit: ${{ steps.actual-get-info.outputs.commit }}
    steps:
    - uses: actions/checkout@v2
    - name: Install lua
      run: |
        sudo apt-get install lua5.3 -y
    - name: Get Version
      id: actual-get-info
      run: |
        echo "::set-output name=name::$(lua .github/workflows/getVersion.lua -name)"
        echo "::set-output name=code::$(lua .github/workflows/getVersion.lua -code)"
        echo "::set-output name=commit::$(git rev-parse --short ${{ GITHUB.SHA }})"

  build-windows:
    runs-on: windows-latest
    needs: get-info
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-info.outputs.commit }}
    - uses: ./.github/actions/build-windows
      with:
        love-url: https://github.com/love2d/love/releases/download/11.3/love-11.3-win64.zip
        love-dir: love-11.3-win64
        arch: win64
        version: ${{ needs.get-info.outputs.name }}
        icon: .\.github\build\Windows\icon_snapshot.ico
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-info.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-info.outputs.commit }}_Windows
        path: love

  build-linux:
    runs-on: ubuntu-20.04
    needs: get-info
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-info.outputs.commit }}
    - uses: ./.github/actions/build-linux
      with:
        icon: .github/build/Linux/icon_snapshot.png
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-info.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-info.outputs.commit }}_Linux
        path: Techmino.AppImage

  build-android:
    runs-on: ubuntu-20.04
    needs: get-info
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-info.outputs.commit }}
    - uses: ./.github/actions/build-android
      with:
        type: Snapshot
        code: ${{ needs.get-info.outputs.code }}
        name: ${{ needs.get-info.outputs.name }}
        file-path: Techmino_Snapshot.apk
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        ALIAS: ${{ secrets.ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-info.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-info.outputs.commit }}_Android
        path: Techmino_Snapshot.apk

  build-macOS:
    runs-on: macos-10.15
    needs: get-info
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-info.outputs.commit }}
    - uses: ./.github/actions/build-macos
      with:
        name: ${{ needs.get-info.outputs.name }}
        icon: .github/build/macOS/icon_snapshot.icns
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_ID: ${{ secrets.MACOS_CERTIFICATE_ID }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
    - name: Pack Techmino
      run: |
        zip -r -y Techmino.zip Techmino.app
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-info.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-info.outputs.commit }}_macOS
        path: Techmino.zip

  build-iOS:
    runs-on: macos-11
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2

    - uses: ./.github/actions/snapshot-update
      with:
        commit: ${{ needs.get-version.outputs.commit }}

    - uses: ./.github/actions/build-ios
      with:
        cc-url: ${{ needs.get-cc-url.outputs.url }}/iOS.zip
        name: ${{ needs.get-version.outputs.name }}
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_ID: ${{ secrets.MACOS_CERTIFICATE_ID }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ needs.get-version.outputs.commit }}_iOS
        path: Techmino-iOS