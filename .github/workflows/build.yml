name: Techmino CI

on:
  push:
    branches: [ main, ci* ]
  pull_request:
    branches: [ main, ci* ]

jobs:
  get-version:
    runs-on: ubuntu-20.04
    outputs:
      name: ${{ steps.actual-get-version.outputs.name }}
      code: ${{ steps.actual-get-version.outputs.code }}
    steps:
    - uses: actions/checkout@v2
    - name: Install lua
      run: |
        sudo apt-get update -y
        sudo apt-get install lua5.3 -y
    - name: Get Version
      id: actual-get-version
      run: |
        echo "::set-output name=name::$(lua ./.github/workflows/getVersion.lua -name)"
        echo "::set-output name=code::$(lua ./.github/workflows/getVersion.lua -code)"

  get-cc-url:
    runs-on: ubuntu-20.04
    outputs:
      url: ${{ steps.get-url.outputs.url }}
    steps:
    - uses: actions/checkout@v2
    - name: Get URL
      id: get-url
      run: |
        echo "::set-output name=url::https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$(python ./.github/workflows/getLatest.py -P)"

  build-windows:
    runs-on: windows-latest
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - name: Get CommitID
      run: |
        $CommitID=git rev-parse --short "${{ GITHUB.SHA }}"
        echo "CommitID=${CommitID}" >> $env:GITHUB_ENV
    - name: Update Conf
      run: |
        python .\.github\workflows\updateVersion.py -T Conf
    - name: Update Version
      run: |
        python .\.github\workflows\updateVersion.py -T ${{ needs.get-version.outputs.name }} -H ${{ env.CommitID }}
    - uses: ./.github/actions/get-unzip
      with:
        url: https://github.com/love2d/love/releases/download/11.3/love-11.3-win64.zip
    - uses: ./.github/actions/get-unzip
      with:
        url: ${{ needs.get-cc-url.outputs.url }}/win64.zip
    - uses: ./.github/actions/get-unzip
      with:
        url: http://www.angusj.com/resourcehacker/resource_hacker.zip
    - name: Pack Techmino
      run: |
        7z a -tzip .\Techmino.love .\document .\media .\parts .\Zframework .\conf.lua .\main.lua .\version.lua
        cmd /c copy /b .\love-11.3-win64\love.exe + .\Techmino.love .\love-11.3-win64\Techmino.exe
        del .\love-11.3-win64\love.exe
        del .\love-11.3-win64\lovec.exe
        del .\love-11.3-win64\game.ico
        del .\love-11.3-win64\love.ico
        del .\love-11.3-win64\changes.txt
        del .\love-11.3-win64\readme.txt
        move .\cold_clear.dll .\love-11.3-win64
        move .\CCloader.dll .\love-11.3-win64
        python .\.github\workflows\updateVersion.py -T Windows -N ${{ needs.get-version.outputs.name }}
        cmd /c '.\ResourceHacker.exe -open .\love-11.3-win64\Techmino.exe -save .\love-11.3-win64\Techmino.exe -action delete -mask ICONGROUP,,'
        cmd /c '.\ResourceHacker.exe -open .\Techmino.rc -save .\Techmino.res -action compile'
        cmd /c '.\ResourceHacker.exe -open .\love-11.3-win64\Techmino.exe -save .\love-11.3-win64\Techmino.exe -action addoverwrite -res ".\.github\build\Windows\icon_snapshot.ico" -mask ICONGROUP,1,'
        cmd /c '.\ResourceHacker.exe -open .\love-11.3-win64\Techmino.exe -save .\love-11.3-win64\Techmino.exe -action addoverwrite -res ".\Techmino.res" -mask VERSIONINFO,1,'
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ env.CommitID }}_Windows
        path: love-11.3-win64

  build-linux:
    runs-on: ubuntu-20.04
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - name: Get CommitID
      run: |
        CommitID=$(git rev-parse --short "${{ GITHUB.SHA }}")
        echo "CommitID=${CommitID}" >> $GITHUB_ENV
    - name: Update Conf
      run: |
        python3 ./.github/workflows/updateVersion.py -T Conf
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T ${{ needs.get-version.outputs.name }} -H ${{ env.CommitID }}
    - name: Download AppImageKit
      run: |
        curl -OL https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage
    - name: Download love
      run: |
        curl -OL https://github.com/love2d/love/releases/download/11.3/love-11.3-x86_64.AppImage
    - name: Unpack love
      run: |
        chmod 777 ./love-11.3-x86_64.AppImage
        ./love-11.3-x86_64.AppImage --appimage-extract
    - uses: ./.github/actions/get-unzip
      with:
        url: ${{ needs.get-cc-url.outputs.url }}/linux.zip
    - name: Pack Techmino
      run: |
        rm -rf ./squashfs-root/love ./squashfs-root/love.desktop ./squashfs-root/love.svg ./squashfs-root/.DirIcon
        mv ./.github/build/Linux/love.template ./squashfs-root/love
        mv ./.github/build/Linux/Techmino.desktop.template ./squashfs-root/Techmino.desktop
        mv ./.github/build/Linux/icon_snapshot.png ./squashfs-root/icon.png
        cp ./squashfs-root/icon.png ./squashfs-root/.DirIcon
        chmod 777 ./squashfs-root/love
        mkdir -p ./squashfs-root/usr/share/Techmino
        mv ./document ./media ./parts ./Zframework ./conf.lua ./main.lua ./version.lua ./squashfs-root/usr/share/Techmino
        mv ./CCloader.so ./squashfs-root/usr/share/Techmino
        mv ./libcold_clear.so ./squashfs-root/usr/lib
        chmod 777 ./appimagetool-x86_64.AppImage
        ./appimagetool-x86_64.AppImage ./squashfs-root ./Techmino.AppImage
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ env.CommitID }}_Linux
        path: Techmino.AppImage

  build-android:
    runs-on: ubuntu-20.04
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    - name: Get CommitID
      run: |
        CommitID=$(git rev-parse --short "${{ GITHUB.SHA }}")
        echo "CommitID=${CommitID}" >> $GITHUB_ENV
    - name: Update Conf
      run: |
        python3 ./.github/workflows/updateVersion.py -T Conf
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T ${{ needs.get-version.outputs.name }} -H ${{ env.CommitID }}
    - name: Clone love-android
      run: |
        git clone --recurse-submodules https://github.com/26F-Studio/love-android
        cd ./love-android
        git checkout --recurse-submodules CI
    - uses: ./.github/actions/get-unzip
      with:
        url: https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
    - name: Install SDK NDK
      run: |
        yes | ./cmdline-tools/bin/sdkmanager --sdk_root=. --install "platforms;android-30"
        yes | ./cmdline-tools/bin/sdkmanager --sdk_root=. --install "ndk;21.3.6528147"
        export ANDROID_HOME=$(pwd)
    - uses: ./.github/actions/get-unzip
      with:
        url: ${{ needs.get-cc-url.outputs.url }}/android_aarch64.zip
        dir: ColdClear/arm64-v8a
    - uses: ./.github/actions/get-unzip
      with:
        url: ${{ needs.get-cc-url.outputs.url }}/android_armv7.zip
        dir: ColdClear/armeabi-v7a
    - name: Pack Techmino
      run: |
        mkdir -p ./love-android/app/src/main/assets
        mkdir -p ./love-android/app/libs/arm64-v8a
        mkdir -p ./love-android/app/libs/armeabi-v7a
        mv ./ColdClear/arm64-v8a/love-11.3-android/lib/arm64-v8a/libcold_clear.so ./love-android/app/libs/arm64-v8a
        mv ./ColdClear/armeabi-v7a/love-11.3-android/lib/armeabi-v7a/libcold_clear.so ./love-android/app/libs/armeabi-v7a
        mkdir -p ./libAndroid/arm64-v8a
        mkdir -p ./libAndroid/armeabi-v7a
        mv ./ColdClear/arm64-v8a/libs/arm64-v8a/libCCloader.so ./libAndroid/arm64-v8a
        mv ./ColdClear/armeabi-v7a/libs/armeabi-v7a/libCCloader.so ./libAndroid/armeabi-v7a
        7z a -tzip ./love-android/app/src/main/assets/game.love ./document ./media ./parts ./Zframework ./libAndroid ./conf.lua ./main.lua ./version.lua
        echo "${{ secrets.SIGNING_KEY }}" | base64 -d > ./love-android/app/android.keystore
        python3 ./.github/workflows/updateVersion.py -T AndroidSnapshot -C ${{ needs.get-version.outputs.code }} -N ${{ needs.get-version.outputs.name }} -S ${{ secrets.KEY_STORE_PASSWORD }} -A ${{ secrets.ALIAS }} -K ${{ secrets.KEY_PASSWORD }}
        chmod 777 ./love-android/gradlew
        cd ./love-android/
        ./gradlew assembleRelease
        mv ./app/build/outputs/apk/release/app-release.apk ./app/build/outputs/apk/release/Techmino_Snapshot.apk
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ env.CommitID }}_Android
        path: ./love-android/app/build/outputs/apk/release/Techmino_Snapshot.apk

  build-macOS:
    runs-on: macos-10.15
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - name: Get CommitID
      run: |
        CommitID=$(git rev-parse --short "${{ GITHUB.SHA }}")
        echo "CommitID=${CommitID}" >> $GITHUB_ENV
    - name: Update Conf
      run: |
        python3 ./.github/workflows/updateVersion.py -T Conf
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T ${{ needs.get-version.outputs.name }} -H ${{ env.CommitID }}
    - name: Pack love
      run: |
        7z a -tzip ./Techmino.love ./document ./media ./parts ./Zframework ./conf.lua ./main.lua ./version.lua
    - uses: ./.github/actions/get-unzip
      with:
        url: https://github.com/26F-Studio/Techmino/releases/download/v0.15.1/Techmino.app.zip
    - uses: ./.github/actions/get-unzip
      with:
        url: ${{ needs.get-cc-url.outputs.url }}/macOS.zip
    - name: Modify template
      run: |
        python3 ./.github/workflows/updateVersion.py -T macOS -N ${{ needs.get-version.outputs.name }}
        mv ./Techmino.love ./Techmino.app/Contents/Resources
        mv ./CCloader.dylib ./Techmino.app/Contents/Frameworks
        mv ./.github/build/macOS/icon_snapshot.icns ./Techmino.app/Contents/Resources/iconfile.icns
    - name: Codesign executable
      # In secrets:
      #   - MACOS_CERTIFICATE: the *.p12 Developer ID Certificate, encoded in base64
      #   - MACOS_CERTIFICATE_PWD: The password
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        security create-keychain -p Techminohaowan build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p Techminohaowan build.keychain
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k Techminohaowan build.keychain
        /usr/bin/codesign --force --deep -s 79B81FC5EA155243C973B5417B0996501F00EF55 ./Techmino.app -v
    - name: Pack Techmino
      run: |
        zip -r -y Techmino.zip Techmino.app
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Techmino_${{ needs.get-version.outputs.name }}_${{ GITHUB.RUN_NUMBER }}_${{ env.CommitID }}_macOS
        path: Techmino.zip
