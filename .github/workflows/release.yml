name: Techmino Release CI

on:
  push:
    tags:
    - '*'

jobs:
  get-version:
    runs-on: ubuntu-20.04
    outputs:
      name: ${{ steps.actual-get-version.outputs.name }}
      code: ${{ steps.actual-get-version.outputs.code }}
      release: ${{ steps.actual-get-version.outputs.release }}
      updateTitle: ${{ steps.actual-get-version.outputs.updateTitle }}
    steps:
    - uses: actions/checkout@v2
    - name: Install lua
      run: |
        sudo apt-get update -y
        sudo apt-get install lua5.3 -y
    - name: Get Version
      id: actual-get-version
      run: |
        echo "::set-output name=name::$(lua ./.github/workflows/getVersion.lua -name)"
        echo "::set-output name=code::$(lua ./.github/workflows/getVersion.lua -code)"
        echo "::set-output name=release::$(lua ./.github/workflows/getVersion.lua -release)"
        echo "::set-output name=updateTitle::$(lua ./.github/workflows/getVersion.lua -updateTitle)"

  get-cc-url:
    runs-on: ubuntu-20.04
    outputs:
      url: ${{ steps.get-url.outputs.url }}
    steps:
    - uses: actions/checkout@v2
    - name: Get URL
      id: get-url
      run: |
        echo "::set-output name=url::https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$(python ./.github/workflows/getLatest.py -P)"

  build-windows-x64:
    runs-on: windows-latest
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - name: Update Version
      run: |
        python .\.github\workflows\updateVersion.py -T ${{ needs.get-version.outputs.release }}
    - uses: ./.github/actions/build-windows
      with:
        love-url: https://github.com/love2d/love/releases/download/11.3/love-11.3-win64.zip
        love-dir: love-11.3-win64
        cc-url: ${{ needs.get-cc-url.outputs.url }}/win64.zip
        version: ${{ needs.get-version.outputs.release }}
    - name: Pack Techmino
      run: 7z a -tzip .\Techmino.a${{ needs.get-version.outputs.release }}.Win64.zip .\love
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ needs.get-version.outputs.updateTitle }}
        files: Techmino.a${{ needs.get-version.outputs.release }}.Win64.zip

  build-windows-x86:
    runs-on: windows-latest
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - name: Update Version
      run: |
        python .\.github\workflows\updateVersion.py -T ${{ needs.get-version.outputs.release }}
    - uses: ./.github/actions/build-windows
      with:
        love-url: https://github.com/love2d/love/releases/download/11.3/love-11.3-win32.zip
        love-dir: love-11.3-win32
        cc-url: ${{ needs.get-cc-url.outputs.url }}/win32.zip
        version: ${{ needs.get-version.outputs.release }}
    - name: Pack Techmino
      run: 7z a -tzip .\Techmino.a${{ needs.get-version.outputs.release }}.Win32.zip .\love
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ needs.get-version.outputs.updateTitle }}
        files: Techmino.a${{ needs.get-version.outputs.release }}.Win32.zip

  build-linux:
    runs-on: ubuntu-20.04
    needs: [get-version, get-cc-url]
    steps:
    - uses: actions/checkout@v2
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T ${{ needs.get-version.outputs.release }}
    - uses: ./.github/actions/build-linux
      with:
        cc-url: ${{ needs.get-cc-url.outputs.url }}/linux.zip
        filename: Techmino.a${{ needs.get-version.outputs.release }}.AppImage
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ needs.get-version.outputs.updateTitle }}
        files: Techmino.a${{ needs.get-version.outputs.release }}.AppImage

  build-android:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    - name: Install lua
      run: |
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt-get install lua5.3 -y
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T Version
    - name: Get Version
      run: |
        Version=$(lua ./.github/workflows/getVersion.lua -release)
        echo "Version=${Version}" >> $GITHUB_ENV
    - name: Get ReleaseTitle
      run: |
        Title=$(lua ./.github/workflows/getVersion.lua -updateTitle)
        echo "Title=${Title}" >> $GITHUB_ENV
    - name: Clone love-android
      run: |
        git clone --recurse-submodules https://github.com/26F-Studio/love-android
        cd ./love-android
        git checkout --recurse-submodules CI
    - name: Download androidSDK
      run: |
        wget -O commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
    - name: Unpack androidSDK
      run: |
        unzip ./commandlinetools.zip
    - name: Install SDK NDK
      run: |
        yes | ./cmdline-tools/bin/sdkmanager --sdk_root=. --install "platforms;android-30"
        yes | ./cmdline-tools/bin/sdkmanager --sdk_root=. --install "ndk;21.3.6528147"
        export ANDROID_HOME=$(pwd)
    - name: Download ColdClear
      run: |
        CCVersion=$(python3 ./.github/workflows/getLatest.py)
        curl -OL https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$CCVersion/android_aarch64.zip
        curl -OL https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$CCVersion/android_armv7.zip
    - name: Unpack ColdClear
      run: |
        7z x ./android_aarch64.zip -oColdClear/android_aarch64
        7z x ./android_armv7.zip -oColdClear/android_armv7
    - name: Pack Techmino
      run: |
        mkdir -p ./love-android/app/src/main/assets
        mkdir -p ./love-android/app/libs/arm64-v8a
        mkdir -p ./love-android/app/libs/armeabi-v7a
        mv ./ColdClear/android_aarch64/love-11.3-android/lib/arm64-v8a/libcold_clear.so ./love-android/app/libs/arm64-v8a
        mv ./ColdClear/android_armv7/love-11.3-android/lib/armeabi-v7a/libcold_clear.so ./love-android/app/libs/armeabi-v7a
        mkdir -p ./libAndroid/arm64-v8a
        mkdir -p ./libAndroid/armeabi-v7a
        mv ./ColdClear/android_aarch64/libs/arm64-v8a/libCCloader.so ./libAndroid/arm64-v8a
        mv ./ColdClear/android_armv7/libs/armeabi-v7a/libCCloader.so ./libAndroid/armeabi-v7a
        7z a -tzip ./love-android/app/src/main/assets/game.love ./document ./media ./parts ./Zframework ./libAndroid ./conf.lua ./main.lua ./version.lua
        echo "${{ secrets.SIGNING_KEY }}" | base64 -d > ./love-android/app/android.keystore
        python3 ./.github/workflows/updateVersion.py -T AndroidRelease -C $(lua ./.github/workflows/getVersion.lua -code) -N $(lua ./.github/workflows/getVersion.lua -name) -S ${{ secrets.KEY_STORE_PASSWORD }} -A ${{ secrets.ALIAS }} -K ${{ secrets.KEY_PASSWORD }}
        chmod 777 ./love-android/gradlew
        cd ./love-android/
        ./gradlew assembleRelease
        mv ./app/build/outputs/apk/release/app-release.apk ./app/build/outputs/apk/release/Techmino.a${{ env.Version }}.apk
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.Title }}
        files: ./love-android/app/build/outputs/apk/release/Techmino.a${{ env.Version }}.apk

  build-android-mini:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    - name: Install lua
      run: |
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt-get install lua5.3 -y
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T Version
    - name: Get Version
      run: |
        Version=$(lua ./.github/workflows/getVersion.lua -release)
        echo "Version=${Version}" >> $GITHUB_ENV
    - name: Get ReleaseTitle
      run: |
        Title=$(lua ./.github/workflows/getVersion.lua -updateTitle)
        echo "Title=${Title}" >> $GITHUB_ENV
    - name: Clone love-android
      run: |
        git clone --recurse-submodules https://github.com/26F-Studio/love-android
        cd ./love-android
        git checkout --recurse-submodules CI
    - name: Download androidSDK
      run: |
        wget -O commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
    - name: Unpack androidSDK
      run: |
        unzip ./commandlinetools.zip
    - name: Install SDK NDK
      run: |
        yes | ./cmdline-tools/bin/sdkmanager --sdk_root=. --install "platforms;android-30"
        yes | ./cmdline-tools/bin/sdkmanager --sdk_root=. --install "ndk;21.3.6528147"
        export ANDROID_HOME=$(pwd)
    - name: Download ColdClear
      run: |
        CCVersion=$(python3 ./.github/workflows/getLatest.py)
        curl -OL https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$CCVersion/android_aarch64.zip
        curl -OL https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$CCVersion/android_armv7.zip
    - name: Unpack ColdClear
      run: |
        7z x ./android_aarch64.zip -oColdClear/android_aarch64
        7z x ./android_armv7.zip -oColdClear/android_armv7
    - name: Pack Techmino
      run: |
        mkdir -p ./love-android/app/src/main/assets
        mkdir -p ./love-android/app/libs/arm64-v8a
        mv ./ColdClear/android_aarch64/love-11.3-android/lib/arm64-v8a/libcold_clear.so ./love-android/app/libs/arm64-v8a
        mkdir -p ./libAndroid/arm64-v8a
        mv ./ColdClear/android_aarch64/libs/arm64-v8a/libCCloader.so ./libAndroid/arm64-v8a
        rm -rf ./media/music ./media/effect ./media/vocal
        7z a -tzip ./love-android/app/src/main/assets/game.love ./document ./media ./parts ./Zframework ./libAndroid ./conf.lua ./main.lua ./version.lua
        echo "${{ secrets.SIGNING_KEY }}" | base64 -d > ./love-android/app/android.keystore
        python3 ./.github/workflows/updateVersion.py -T AndroidRelease -C $(lua ./.github/workflows/getVersion.lua -code) -N $(lua ./.github/workflows/getVersion.lua -name) -S ${{ secrets.KEY_STORE_PASSWORD }} -A ${{ secrets.ALIAS }} -K ${{ secrets.KEY_PASSWORD }}
        chmod 777 ./love-android/gradlew
        cd ./love-android/
        ./gradlew assembleRelease
        mv ./app/build/outputs/apk/release/app-release.apk ./app/build/outputs/apk/release/Techmino.a${{ env.Version }}.mini.apk
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.Title }}
        files: ./love-android/app/build/outputs/apk/release/Techmino.a${{ env.Version }}.mini.apk

  build-macOS:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: Install lua
      run: |
        curl -OL http://www.lua.org/ftp/lua-5.4.3.tar.gz
        tar zxf lua-5.4.3.tar.gz
        cd lua-5.4.3
        make macosx
        sudo make install
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T Version
    - name: Get Version
      run: |
        Version=$(lua ./.github/workflows/getVersion.lua -release)
        echo "Version=${Version}" >> $GITHUB_ENV
    - name: Get ReleaseTitle
      run: |
        Title=$(lua ./.github/workflows/getVersion.lua -updateTitle)
        echo "Title=${Title}" >> $GITHUB_ENV
    - name: Pack love
      run: |
        7z a -tzip ./Techmino.love ./document ./media ./parts ./Zframework ./conf.lua ./main.lua ./version.lua
    - name: Download template
      run: |
        curl -OL https://github.com/26F-Studio/Techmino/releases/download/v0.15.1/Techmino.app.zip
    - name: Unpack template
      run: |
        7z x ./Techmino.app.zip
    - name: Get CCloader
      run: |
        pip3 install requests
        CCVersion=$(python3 ./.github/workflows/getLatest.py)
        curl -OL https://github.com/26F-Studio/cold_clear_ai_love2d_wrapper/releases/download/$CCVersion/macOS.zip
        unzip macOS.zip
    - name: Modify template
      run: |
        python3 ./.github/workflows/updateVersion.py -T macOS -N $(lua ./.github/workflows/getVersion.lua -name)
        mv ./Techmino.love ./Techmino.app/Contents/Resources
        mv ./CCloader.dylib ./Techmino.app/Contents/Frameworks
        mv ./.github/build/macOS/icon.icns ./Techmino.app/Contents/Resources/iconfile.icns
    - name: Codesign executable
      # In secrets:
      #   - MACOS_CERTIFICATE: the *.p12 Developer ID Certificate, encoded in base64
      #   - MACOS_CERTIFICATE_PWD: The password
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        security create-keychain -p Techminohaowan build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p Techminohaowan build.keychain
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k Techminohaowan build.keychain
        /usr/bin/codesign --force --deep -s 79B81FC5EA155243C973B5417B0996501F00EF55 ./Techmino.app -v
    - name: Pack Techmino
      run: |
        zip -r -y Techmino.a${{ env.Version }}.macOS.zip Techmino.app ".github/build/macOS/打不开？Can’t open the App？.pdf"
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.Title }}
        files: Techmino.a${{ env.Version }}.macOS.zip

  build-love:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install lua
      run: |
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt-get install lua5.3 -y
    - name: Update Version
      run: |
        python3 ./.github/workflows/updateVersion.py -T Version
    - name: Get Version
      run: |
        Version=$(lua ./.github/workflows/getVersion.lua -release)
        echo "Version=${Version}" >> $GITHUB_ENV
    - name: Get ReleaseTitle
      run: |
        Title=$(lua ./.github/workflows/getVersion.lua -updateTitle)
        echo "Title=${Title}" >> $GITHUB_ENV
    - name: Pack Techmino
      run: |
        7z a -tzip ./Techmino.a${{ env.Version }}.love ./document ./media ./parts ./Zframework ./conf.lua ./main.lua ./version.lua
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.Title }}
        files: Techmino.a${{ env.Version }}.love

  Add-Release-note:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install lua
      run: |
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt-get install lua5.3 -y
    - name: Get ReleaseTitle
      run: |
        Title=$(lua ./.github/workflows/getVersion.lua -updateTitle)
        echo "Title=${Title}" >> $GITHUB_ENV
    - name: Get ReleaseNote
      run: |
        lua ./.github/workflows/getVersion.lua -updateNote > updateNote.txt
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.Title }}
        body_path: ./updateNote.txt
